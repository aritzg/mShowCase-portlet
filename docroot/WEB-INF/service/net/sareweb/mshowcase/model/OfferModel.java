/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package net.sareweb.mshowcase.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;
import java.util.Locale;
import java.util.Map;

/**
 * The base model interface for the Offer service. Represents a row in the &quot;msc_Offer&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link net.sareweb.mshowcase.model.impl.OfferModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link net.sareweb.mshowcase.model.impl.OfferImpl}.
 * </p>
 *
 * @author Aritz Galdos
 * @see Offer
 * @see net.sareweb.mshowcase.model.impl.OfferImpl
 * @see net.sareweb.mshowcase.model.impl.OfferModelImpl
 * @generated
 */
public interface OfferModel extends BaseModel<Offer> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a offer model instance should use the {@link Offer} interface instead.
	 */

	/**
	 * Returns the primary key of this offer.
	 *
	 * @return the primary key of this offer
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this offer.
	 *
	 * @param primaryKey the primary key of this offer
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the offer ID of this offer.
	 *
	 * @return the offer ID of this offer
	 */
	public long getOfferId();

	/**
	 * Sets the offer ID of this offer.
	 *
	 * @param offerId the offer ID of this offer
	 */
	public void setOfferId(long offerId);

	/**
	 * Returns the instance ID of this offer.
	 *
	 * @return the instance ID of this offer
	 */
	public long getInstanceId();

	/**
	 * Sets the instance ID of this offer.
	 *
	 * @param instanceId the instance ID of this offer
	 */
	public void setInstanceId(long instanceId);

	/**
	 * Returns the offer text of this offer.
	 *
	 * @return the offer text of this offer
	 */
	public String getOfferText();

	/**
	 * Returns the localized offer text of this offer in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized offer text of this offer
	 */
	@AutoEscape
	public String getOfferText(Locale locale);

	/**
	 * Returns the localized offer text of this offer in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized offer text of this offer. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getOfferText(Locale locale, boolean useDefault);

	/**
	 * Returns the localized offer text of this offer in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized offer text of this offer
	 */
	@AutoEscape
	public String getOfferText(String languageId);

	/**
	 * Returns the localized offer text of this offer in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized offer text of this offer
	 */
	@AutoEscape
	public String getOfferText(String languageId, boolean useDefault);

	@AutoEscape
	public String getOfferTextCurrentLanguageId();

	@AutoEscape
	public String getOfferTextCurrentValue();

	/**
	 * Returns a map of the locales and localized offer texts of this offer.
	 *
	 * @return the locales and localized offer texts of this offer
	 */
	public Map<Locale, String> getOfferTextMap();

	/**
	 * Sets the offer text of this offer.
	 *
	 * @param offerText the offer text of this offer
	 */
	public void setOfferText(String offerText);

	/**
	 * Sets the localized offer text of this offer in the language.
	 *
	 * @param offerText the localized offer text of this offer
	 * @param locale the locale of the language
	 */
	public void setOfferText(String offerText, Locale locale);

	/**
	 * Sets the localized offer text of this offer in the language, and sets the default locale.
	 *
	 * @param offerText the localized offer text of this offer
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setOfferText(String offerText, Locale locale,
		Locale defaultLocale);

	public void setOfferTextCurrentLanguageId(String languageId);

	/**
	 * Sets the localized offer texts of this offer from the map of locales and localized offer texts.
	 *
	 * @param offerTextMap the locales and localized offer texts of this offer
	 */
	public void setOfferTextMap(Map<Locale, String> offerTextMap);

	/**
	 * Sets the localized offer texts of this offer from the map of locales and localized offer texts, and sets the default locale.
	 *
	 * @param offerTextMap the locales and localized offer texts of this offer
	 * @param defaultLocale the default locale
	 */
	public void setOfferTextMap(Map<Locale, String> offerTextMap,
		Locale defaultLocale);

	/**
	 * Returns the begin date of this offer.
	 *
	 * @return the begin date of this offer
	 */
	public Date getBeginDate();

	/**
	 * Sets the begin date of this offer.
	 *
	 * @param beginDate the begin date of this offer
	 */
	public void setBeginDate(Date beginDate);

	/**
	 * Returns the end date of this offer.
	 *
	 * @return the end date of this offer
	 */
	public Date getEndDate();

	/**
	 * Sets the end date of this offer.
	 *
	 * @param endDate the end date of this offer
	 */
	public void setEndDate(Date endDate);

	/**
	 * Returns the price of this offer.
	 *
	 * @return the price of this offer
	 */
	public double getPrice();

	/**
	 * Sets the price of this offer.
	 *
	 * @param price the price of this offer
	 */
	public void setPrice(double price);

	/**
	 * Returns the transactions of this offer.
	 *
	 * @return the transactions of this offer
	 */
	public int getTransactions();

	/**
	 * Sets the transactions of this offer.
	 *
	 * @param transactions the transactions of this offer
	 */
	public void setTransactions(int transactions);

	/**
	 * Returns the image ID of this offer.
	 *
	 * @return the image ID of this offer
	 */
	public long getImageId();

	/**
	 * Sets the image ID of this offer.
	 *
	 * @param imageId the image ID of this offer
	 */
	public void setImageId(long imageId);

	/**
	 * Returns the image u r l of this offer.
	 *
	 * @return the image u r l of this offer
	 */
	@AutoEscape
	public String getImageURL();

	/**
	 * Sets the image u r l of this offer.
	 *
	 * @param imageURL the image u r l of this offer
	 */
	public void setImageURL(String imageURL);

	/**
	 * Returns the user ID of this offer.
	 *
	 * @return the user ID of this offer
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this offer.
	 *
	 * @param userId the user ID of this offer
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this offer.
	 *
	 * @return the user uuid of this offer
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this offer.
	 *
	 * @param userUuid the user uuid of this offer
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the company ID of this offer.
	 *
	 * @return the company ID of this offer
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this offer.
	 *
	 * @param companyId the company ID of this offer
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the create date of this offer.
	 *
	 * @return the create date of this offer
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this offer.
	 *
	 * @param createDate the create date of this offer
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modify date of this offer.
	 *
	 * @return the modify date of this offer
	 */
	public Date getModifyDate();

	/**
	 * Sets the modify date of this offer.
	 *
	 * @param modifyDate the modify date of this offer
	 */
	public void setModifyDate(Date modifyDate);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(Offer offer);

	public int hashCode();

	public CacheModel<Offer> toCacheModel();

	public Offer toEscapedModel();

	public String toString();

	public String toXmlString();
}